// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// 
//This source code was auto-generated by MonoXSD
//
namespace Schemas {
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("CICMMetadata", Namespace="", IsNullable=false)]
    public partial class CICMMetadataType {
        
        private string[] developerField;
        
        private string[] publisherField;
        
        private string[] authorField;
        
        private string[] performerField;
        
        private string nameField;
        
        private string versionField;
        
        private CICMMetadataTypeReleaseType releaseTypeField;
        
        private bool releaseTypeFieldSpecified;
        
        private System.DateTime releaseDateField;
        
        private bool releaseDateFieldSpecified;
        
        private BarcodeType[] barcodesField;
        
        private string partNumberField;
        
        private string serialNumberField;
        
        private string[] keywordsField;
        
        private MagazineType[] magazineField;
        
        private BookType[] bookField;
        
        private string[] categoriesField;
        
        private string[] subcategoriesField;
        
        private LanguagesTypeLanguage[] languagesField;
        
        private string[] systemsField;
        
        private ArchitecturesTypeArchitecture[] architecturesField;
        
        private RequiredOperatingSystemType[] requiredOperatingSystemsField;
        
        private UserManualType[] userManualField;
        
        private OpticalDiscType[] opticalDiscField;
        
        private AdvertisementType[] advertisementField;
        
        private LinearMediaType[] linearMediaField;
        
        private PCIType[] pCICardField;
        
        private BlockMediaType[] blockMediaField;
        
        private AudioMediaType[] audioMediaField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Developer")]
        public string[] Developer {
            get {
                return this.developerField;
            }
            set {
                this.developerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Publisher")]
        public string[] Publisher {
            get {
                return this.publisherField;
            }
            set {
                this.publisherField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Author")]
        public string[] Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Performer")]
        public string[] Performer {
            get {
                return this.performerField;
            }
            set {
                this.performerField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public CICMMetadataTypeReleaseType ReleaseType {
            get {
                return this.releaseTypeField;
            }
            set {
                this.releaseTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReleaseTypeSpecified {
            get {
                return this.releaseTypeFieldSpecified;
            }
            set {
                this.releaseTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime ReleaseDate {
            get {
                return this.releaseDateField;
            }
            set {
                this.releaseDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReleaseDateSpecified {
            get {
                return this.releaseDateFieldSpecified;
            }
            set {
                this.releaseDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Barcode", IsNullable=false)]
        public BarcodeType[] Barcodes {
            get {
                return this.barcodesField;
            }
            set {
                this.barcodesField = value;
            }
        }
        
        /// <remarks/>
        public string PartNumber {
            get {
                return this.partNumberField;
            }
            set {
                this.partNumberField = value;
            }
        }
        
        /// <remarks/>
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Keyword", IsNullable=false)]
        public string[] Keywords {
            get {
                return this.keywordsField;
            }
            set {
                this.keywordsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Magazine")]
        public MagazineType[] Magazine {
            get {
                return this.magazineField;
            }
            set {
                this.magazineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Book")]
        public BookType[] Book {
            get {
                return this.bookField;
            }
            set {
                this.bookField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Category", IsNullable=false)]
        public string[] Categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Subcategory", IsNullable=false)]
        public string[] Subcategories {
            get {
                return this.subcategoriesField;
            }
            set {
                this.subcategoriesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Language", IsNullable=false)]
        public LanguagesTypeLanguage[] Languages {
            get {
                return this.languagesField;
            }
            set {
                this.languagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("System", IsNullable=false)]
        public string[] Systems {
            get {
                return this.systemsField;
            }
            set {
                this.systemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Architecture", IsNullable=false)]
        public ArchitecturesTypeArchitecture[] Architectures {
            get {
                return this.architecturesField;
            }
            set {
                this.architecturesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("RequiredOperatingSystem", IsNullable=false)]
        public RequiredOperatingSystemType[] RequiredOperatingSystems {
            get {
                return this.requiredOperatingSystemsField;
            }
            set {
                this.requiredOperatingSystemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("UserManual")]
        public UserManualType[] UserManual {
            get {
                return this.userManualField;
            }
            set {
                this.userManualField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OpticalDisc")]
        public OpticalDiscType[] OpticalDisc {
            get {
                return this.opticalDiscField;
            }
            set {
                this.opticalDiscField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Advertisement")]
        public AdvertisementType[] Advertisement {
            get {
                return this.advertisementField;
            }
            set {
                this.advertisementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LinearMedia")]
        public LinearMediaType[] LinearMedia {
            get {
                return this.linearMediaField;
            }
            set {
                this.linearMediaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PCICard")]
        public PCIType[] PCICard {
            get {
                return this.pCICardField;
            }
            set {
                this.pCICardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BlockMedia")]
        public BlockMediaType[] BlockMedia {
            get {
                return this.blockMediaField;
            }
            set {
                this.blockMediaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AudioMedia")]
        public AudioMediaType[] AudioMedia {
            get {
                return this.audioMediaField;
            }
            set {
                this.audioMediaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum CICMMetadataTypeReleaseType {
        
        /// <remarks/>
        Retail,
        
        /// <remarks/>
        Bundle,
        
        /// <remarks/>
        Coverdisc,
        
        /// <remarks/>
        Subscription,
        
        /// <remarks/>
        Demo,
        
        /// <remarks/>
        OEM,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BarcodeType {
        
        private BarcodeTypeType typeField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public BarcodeTypeType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum BarcodeTypeType {
        
        /// <remarks/>
        aztec,
        
        /// <remarks/>
        codabar,
        
        /// <remarks/>
        code11,
        
        /// <remarks/>
        code128,
        
        /// <remarks/>
        code39,
        
        /// <remarks/>
        code93,
        
        /// <remarks/>
        cpcbinary,
        
        /// <remarks/>
        ezcode,
        
        /// <remarks/>
        fim,
        
        /// <remarks/>
        itf,
        
        /// <remarks/>
        itf14,
        
        /// <remarks/>
        ean13,
        
        /// <remarks/>
        ean8,
        
        /// <remarks/>
        maxicode,
        
        /// <remarks/>
        isbn,
        
        /// <remarks/>
        isrc,
        
        /// <remarks/>
        msi,
        
        /// <remarks/>
        tof,
        
        /// <remarks/>
        shotcode,
        
        /// <remarks/>
        rm4scc,
        
        /// <remarks/>
        qr,
        
        /// <remarks/>
        ean5,
        
        /// <remarks/>
        ean2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("qr")]
        qr1,
        
        /// <remarks/>
        postnet,
        
        /// <remarks/>
        postbar,
        
        /// <remarks/>
        plessey,
        
        /// <remarks/>
        pharmacode,
        
        /// <remarks/>
        pdf417,
        
        /// <remarks/>
        patchcode,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AudioBlockType {
        
        private ImageType imageField;
        
        private long sizeField;
        
        private string accoustIDField;
        
        private ChecksumType[] checksumsField;
        
        private string formatField;
        
        /// <remarks/>
        public ImageType Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public string AccoustID {
            get {
                return this.accoustIDField;
            }
            set {
                this.accoustIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Checksum", IsNullable=false)]
        public ChecksumType[] Checksums {
            get {
                return this.checksumsField;
            }
            set {
                this.checksumsField = value;
            }
        }
        
        /// <remarks/>
        public string Format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImageType {
        
        private string formatField;
        
        private long offsetField;
        
        private bool offsetFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long offset {
            get {
                return this.offsetField;
            }
            set {
                this.offsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool offsetSpecified {
            get {
                return this.offsetFieldSpecified;
            }
            set {
                this.offsetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChecksumType {
        
        private ChecksumTypeType typeField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ChecksumTypeType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ChecksumTypeType {
        
        /// <remarks/>
        fletcher16,
        
        /// <remarks/>
        fletcher32,
        
        /// <remarks/>
        adler32,
        
        /// <remarks/>
        crc16,
        
        /// <remarks/>
        crc16ccitt,
        
        /// <remarks/>
        crc32,
        
        /// <remarks/>
        crc64,
        
        /// <remarks/>
        md4,
        
        /// <remarks/>
        md5,
        
        /// <remarks/>
        dm6,
        
        /// <remarks/>
        ripemd128,
        
        /// <remarks/>
        ripemd160,
        
        /// <remarks/>
        ripemed320,
        
        /// <remarks/>
        sha1,
        
        /// <remarks/>
        sha224,
        
        /// <remarks/>
        sha256,
        
        /// <remarks/>
        sha384,
        
        /// <remarks/>
        sha512,
        
        /// <remarks/>
        sha3,
        
        /// <remarks/>
        skein,
        
        /// <remarks/>
        snefru,
        
        /// <remarks/>
        blake256,
        
        /// <remarks/>
        blake512,
        
        /// <remarks/>
        tiger,
        
        /// <remarks/>
        whirlpool,
        
        /// <remarks/>
        spamsum,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AudioMediaType {
        
        private ImageType imageField;
        
        private long sizeField;
        
        private ChecksumType[] checksumsField;
        
        private SequenceType sequenceField;
        
        private string manufacturerField;
        
        private string modelField;
        
        private string accoustIDField;
        
        private AudioBlockType[] blockField;
        
        private string copyProtectionField;
        
        private DimensionsType dimensionsField;
        
        private ScansType scansField;
        
        private DumpHardwareType[] dumpHardwareArrayField;
        
        /// <remarks/>
        public ImageType Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Checksum", IsNullable=false)]
        public ChecksumType[] Checksums {
            get {
                return this.checksumsField;
            }
            set {
                this.checksumsField = value;
            }
        }
        
        /// <remarks/>
        public SequenceType Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public string AccoustID {
            get {
                return this.accoustIDField;
            }
            set {
                this.accoustIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Block")]
        public AudioBlockType[] Block {
            get {
                return this.blockField;
            }
            set {
                this.blockField = value;
            }
        }
        
        /// <remarks/>
        public string CopyProtection {
            get {
                return this.copyProtectionField;
            }
            set {
                this.copyProtectionField = value;
            }
        }
        
        /// <remarks/>
        public DimensionsType Dimensions {
            get {
                return this.dimensionsField;
            }
            set {
                this.dimensionsField = value;
            }
        }
        
        /// <remarks/>
        public ScansType Scans {
            get {
                return this.scansField;
            }
            set {
                this.scansField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("DumpHardware", IsNullable=false)]
        public DumpHardwareType[] DumpHardwareArray {
            get {
                return this.dumpHardwareArrayField;
            }
            set {
                this.dumpHardwareArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequenceType {
        
        private string mediaTitleField;
        
        private int mediaSequenceField;
        
        private int totalMediaField;
        
        private int sideField;
        
        private bool sideFieldSpecified;
        
        private int layerField;
        
        private bool layerFieldSpecified;
        
        /// <remarks/>
        public string MediaTitle {
            get {
                return this.mediaTitleField;
            }
            set {
                this.mediaTitleField = value;
            }
        }
        
        /// <remarks/>
        public int MediaSequence {
            get {
                return this.mediaSequenceField;
            }
            set {
                this.mediaSequenceField = value;
            }
        }
        
        /// <remarks/>
        public int TotalMedia {
            get {
                return this.totalMediaField;
            }
            set {
                this.totalMediaField = value;
            }
        }
        
        /// <remarks/>
        public int Side {
            get {
                return this.sideField;
            }
            set {
                this.sideField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SideSpecified {
            get {
                return this.sideFieldSpecified;
            }
            set {
                this.sideFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Layer {
            get {
                return this.layerField;
            }
            set {
                this.layerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LayerSpecified {
            get {
                return this.layerFieldSpecified;
            }
            set {
                this.layerFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DimensionsType {
        
        private double diameterField;
        
        private bool diameterFieldSpecified;
        
        private double heightField;
        
        private bool heightFieldSpecified;
        
        private double widthField;
        
        private bool widthFieldSpecified;
        
        private double thicknessField;
        
        /// <remarks/>
        public double Diameter {
            get {
                return this.diameterField;
            }
            set {
                this.diameterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiameterSpecified {
            get {
                return this.diameterFieldSpecified;
            }
            set {
                this.diameterFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified {
            get {
                return this.heightFieldSpecified;
            }
            set {
                this.heightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified {
            get {
                return this.widthFieldSpecified;
            }
            set {
                this.widthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Thickness {
            get {
                return this.thicknessField;
            }
            set {
                this.thicknessField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScansType {
        
        private CaseScanType caseScanField;
        
        private MediaScanType scanField;
        
        /// <remarks/>
        public CaseScanType CaseScan {
            get {
                return this.caseScanField;
            }
            set {
                this.caseScanField = value;
            }
        }
        
        /// <remarks/>
        public MediaScanType Scan {
            get {
                return this.scanField;
            }
            set {
                this.scanField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CaseScanType {
        
        private CaseScanTypeCaseScanElement caseScanElementField;
        
        private ScanType scanField;
        
        /// <remarks/>
        public CaseScanTypeCaseScanElement CaseScanElement {
            get {
                return this.caseScanElementField;
            }
            set {
                this.caseScanElementField = value;
            }
        }
        
        /// <remarks/>
        public ScanType Scan {
            get {
                return this.scanField;
            }
            set {
                this.scanField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum CaseScanTypeCaseScanElement {
        
        /// <remarks/>
        sleeve,
        
        /// <remarks/>
        inner,
        
        /// <remarks/>
        inlay,
        
        /// <remarks/>
        frontback,
        
        /// <remarks/>
        frontfull,
        
        /// <remarks/>
        boxfront,
        
        /// <remarks/>
        boxback,
        
        /// <remarks/>
        boxspine,
        
        /// <remarks/>
        external,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScanType {
        
        private FileType fileField;
        
        private ChecksumType[] checksumsField;
        
        private ScannerType[] scannerField;
        
        private ScanProcessingType[] scanProcessingField;
        
        private OCRType[] oCRField;
        
        /// <remarks/>
        public FileType File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Checksum", IsNullable=false)]
        public ChecksumType[] Checksums {
            get {
                return this.checksumsField;
            }
            set {
                this.checksumsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Scanner")]
        public ScannerType[] Scanner {
            get {
                return this.scannerField;
            }
            set {
                this.scannerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ScanProcessing")]
        public ScanProcessingType[] ScanProcessing {
            get {
                return this.scanProcessingField;
            }
            set {
                this.scanProcessingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OCR")]
        public OCRType[] OCR {
            get {
                return this.oCRField;
            }
            set {
                this.oCRField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileType {
        
        private string formatField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScannerType {
        
        private string authorField;
        
        private string manufacturerField;
        
        private string modelField;
        
        private string serialField;
        
        private string softwareField;
        
        private string softwareVersionField;
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public string Serial {
            get {
                return this.serialField;
            }
            set {
                this.serialField = value;
            }
        }
        
        /// <remarks/>
        public string Software {
            get {
                return this.softwareField;
            }
            set {
                this.softwareField = value;
            }
        }
        
        /// <remarks/>
        public string SoftwareVersion {
            get {
                return this.softwareVersionField;
            }
            set {
                this.softwareVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScanProcessingType {
        
        private string authorField;
        
        private string softwareField;
        
        private string softwareVersionField;
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public string Software {
            get {
                return this.softwareField;
            }
            set {
                this.softwareField = value;
            }
        }
        
        /// <remarks/>
        public string SoftwareVersion {
            get {
                return this.softwareVersionField;
            }
            set {
                this.softwareVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OCRType {
        
        private string authorField;
        
        private string softwareField;
        
        private string softwareVersionField;
        
        private LanguagesTypeLanguage[] languageField;
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        public string Software {
            get {
                return this.softwareField;
            }
            set {
                this.softwareField = value;
            }
        }
        
        /// <remarks/>
        public string SoftwareVersion {
            get {
                return this.softwareVersionField;
            }
            set {
                this.softwareVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Language", IsNullable=false)]
        public LanguagesTypeLanguage[] Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LanguagesTypeLanguage {
        
        /// <remarks/>
        aar,
        
        /// <remarks/>
        abk,
        
        /// <remarks/>
        ace,
        
        /// <remarks/>
        ach,
        
        /// <remarks/>
        ada,
        
        /// <remarks/>
        ady,
        
        /// <remarks/>
        afa,
        
        /// <remarks/>
        afh,
        
        /// <remarks/>
        afr,
        
        /// <remarks/>
        ain,
        
        /// <remarks/>
        aka,
        
        /// <remarks/>
        akk,
        
        /// <remarks/>
        alb,
        
        /// <remarks/>
        ale,
        
        /// <remarks/>
        alg,
        
        /// <remarks/>
        alt,
        
        /// <remarks/>
        amh,
        
        /// <remarks/>
        ang,
        
        /// <remarks/>
        anp,
        
        /// <remarks/>
        apa,
        
        /// <remarks/>
        ara,
        
        /// <remarks/>
        arc,
        
        /// <remarks/>
        arg,
        
        /// <remarks/>
        arm,
        
        /// <remarks/>
        arn,
        
        /// <remarks/>
        arp,
        
        /// <remarks/>
        art,
        
        /// <remarks/>
        arw,
        
        /// <remarks/>
        asm,
        
        /// <remarks/>
        ast,
        
        /// <remarks/>
        ath,
        
        /// <remarks/>
        aus,
        
        /// <remarks/>
        ava,
        
        /// <remarks/>
        ave,
        
        /// <remarks/>
        awa,
        
        /// <remarks/>
        aym,
        
        /// <remarks/>
        aze,
        
        /// <remarks/>
        bad,
        
        /// <remarks/>
        bai,
        
        /// <remarks/>
        bak,
        
        /// <remarks/>
        bal,
        
        /// <remarks/>
        bam,
        
        /// <remarks/>
        ban,
        
        /// <remarks/>
        baq,
        
        /// <remarks/>
        bas,
        
        /// <remarks/>
        bat,
        
        /// <remarks/>
        bej,
        
        /// <remarks/>
        bel,
        
        /// <remarks/>
        bem,
        
        /// <remarks/>
        ben,
        
        /// <remarks/>
        ber,
        
        /// <remarks/>
        bho,
        
        /// <remarks/>
        bih,
        
        /// <remarks/>
        bik,
        
        /// <remarks/>
        bin,
        
        /// <remarks/>
        bis,
        
        /// <remarks/>
        bla,
        
        /// <remarks/>
        bnt,
        
        /// <remarks/>
        bos,
        
        /// <remarks/>
        bra,
        
        /// <remarks/>
        bre,
        
        /// <remarks/>
        btk,
        
        /// <remarks/>
        bua,
        
        /// <remarks/>
        bug,
        
        /// <remarks/>
        bul,
        
        /// <remarks/>
        bur,
        
        /// <remarks/>
        byn,
        
        /// <remarks/>
        cad,
        
        /// <remarks/>
        cai,
        
        /// <remarks/>
        car,
        
        /// <remarks/>
        cat,
        
        /// <remarks/>
        cau,
        
        /// <remarks/>
        ceb,
        
        /// <remarks/>
        cel,
        
        /// <remarks/>
        cha,
        
        /// <remarks/>
        chb,
        
        /// <remarks/>
        che,
        
        /// <remarks/>
        chg,
        
        /// <remarks/>
        chi,
        
        /// <remarks/>
        chk,
        
        /// <remarks/>
        chm,
        
        /// <remarks/>
        chn,
        
        /// <remarks/>
        cho,
        
        /// <remarks/>
        chp,
        
        /// <remarks/>
        chr,
        
        /// <remarks/>
        chu,
        
        /// <remarks/>
        chv,
        
        /// <remarks/>
        chy,
        
        /// <remarks/>
        cmc,
        
        /// <remarks/>
        cop,
        
        /// <remarks/>
        cor,
        
        /// <remarks/>
        cos,
        
        /// <remarks/>
        cpe,
        
        /// <remarks/>
        cpf,
        
        /// <remarks/>
        cpp,
        
        /// <remarks/>
        cre,
        
        /// <remarks/>
        crh,
        
        /// <remarks/>
        crp,
        
        /// <remarks/>
        csb,
        
        /// <remarks/>
        cus,
        
        /// <remarks/>
        cze,
        
        /// <remarks/>
        dak,
        
        /// <remarks/>
        dan,
        
        /// <remarks/>
        dar,
        
        /// <remarks/>
        day,
        
        /// <remarks/>
        del,
        
        /// <remarks/>
        den,
        
        /// <remarks/>
        dgr,
        
        /// <remarks/>
        din,
        
        /// <remarks/>
        div,
        
        /// <remarks/>
        doi,
        
        /// <remarks/>
        dra,
        
        /// <remarks/>
        dsb,
        
        /// <remarks/>
        dua,
        
        /// <remarks/>
        dum,
        
        /// <remarks/>
        dut,
        
        /// <remarks/>
        dyu,
        
        /// <remarks/>
        dzo,
        
        /// <remarks/>
        efi,
        
        /// <remarks/>
        egy,
        
        /// <remarks/>
        eka,
        
        /// <remarks/>
        elx,
        
        /// <remarks/>
        eng,
        
        /// <remarks/>
        enm,
        
        /// <remarks/>
        epo,
        
        /// <remarks/>
        est,
        
        /// <remarks/>
        ewe,
        
        /// <remarks/>
        ewo,
        
        /// <remarks/>
        fan,
        
        /// <remarks/>
        fao,
        
        /// <remarks/>
        fat,
        
        /// <remarks/>
        fij,
        
        /// <remarks/>
        fil,
        
        /// <remarks/>
        fin,
        
        /// <remarks/>
        fiu,
        
        /// <remarks/>
        fon,
        
        /// <remarks/>
        fre,
        
        /// <remarks/>
        frm,
        
        /// <remarks/>
        fro,
        
        /// <remarks/>
        frr,
        
        /// <remarks/>
        frs,
        
        /// <remarks/>
        fry,
        
        /// <remarks/>
        ful,
        
        /// <remarks/>
        fur,
        
        /// <remarks/>
        gaa,
        
        /// <remarks/>
        gay,
        
        /// <remarks/>
        gba,
        
        /// <remarks/>
        gem,
        
        /// <remarks/>
        geo,
        
        /// <remarks/>
        ger,
        
        /// <remarks/>
        gez,
        
        /// <remarks/>
        gil,
        
        /// <remarks/>
        gla,
        
        /// <remarks/>
        gle,
        
        /// <remarks/>
        glg,
        
        /// <remarks/>
        glv,
        
        /// <remarks/>
        gmh,
        
        /// <remarks/>
        goh,
        
        /// <remarks/>
        gon,
        
        /// <remarks/>
        gor,
        
        /// <remarks/>
        got,
        
        /// <remarks/>
        grb,
        
        /// <remarks/>
        grc,
        
        /// <remarks/>
        gre,
        
        /// <remarks/>
        grn,
        
        /// <remarks/>
        gsw,
        
        /// <remarks/>
        guj,
        
        /// <remarks/>
        gwi,
        
        /// <remarks/>
        hai,
        
        /// <remarks/>
        hat,
        
        /// <remarks/>
        hau,
        
        /// <remarks/>
        haw,
        
        /// <remarks/>
        heb,
        
        /// <remarks/>
        her,
        
        /// <remarks/>
        hil,
        
        /// <remarks/>
        him,
        
        /// <remarks/>
        hin,
        
        /// <remarks/>
        hit,
        
        /// <remarks/>
        hmn,
        
        /// <remarks/>
        hmo,
        
        /// <remarks/>
        hrv,
        
        /// <remarks/>
        hsb,
        
        /// <remarks/>
        hun,
        
        /// <remarks/>
        hup,
        
        /// <remarks/>
        iba,
        
        /// <remarks/>
        ibo,
        
        /// <remarks/>
        ice,
        
        /// <remarks/>
        ido,
        
        /// <remarks/>
        iii,
        
        /// <remarks/>
        ijo,
        
        /// <remarks/>
        iku,
        
        /// <remarks/>
        ile,
        
        /// <remarks/>
        ilo,
        
        /// <remarks/>
        ina,
        
        /// <remarks/>
        inc,
        
        /// <remarks/>
        ind,
        
        /// <remarks/>
        ine,
        
        /// <remarks/>
        inh,
        
        /// <remarks/>
        ipk,
        
        /// <remarks/>
        ira,
        
        /// <remarks/>
        iro,
        
        /// <remarks/>
        ita,
        
        /// <remarks/>
        jav,
        
        /// <remarks/>
        jbo,
        
        /// <remarks/>
        jpn,
        
        /// <remarks/>
        jpr,
        
        /// <remarks/>
        jrb,
        
        /// <remarks/>
        kaa,
        
        /// <remarks/>
        kab,
        
        /// <remarks/>
        kac,
        
        /// <remarks/>
        kal,
        
        /// <remarks/>
        kam,
        
        /// <remarks/>
        kan,
        
        /// <remarks/>
        kar,
        
        /// <remarks/>
        kas,
        
        /// <remarks/>
        kau,
        
        /// <remarks/>
        kaw,
        
        /// <remarks/>
        kaz,
        
        /// <remarks/>
        kbd,
        
        /// <remarks/>
        kha,
        
        /// <remarks/>
        khi,
        
        /// <remarks/>
        khm,
        
        /// <remarks/>
        kho,
        
        /// <remarks/>
        kik,
        
        /// <remarks/>
        kin,
        
        /// <remarks/>
        kir,
        
        /// <remarks/>
        kmb,
        
        /// <remarks/>
        kok,
        
        /// <remarks/>
        kom,
        
        /// <remarks/>
        kon,
        
        /// <remarks/>
        kor,
        
        /// <remarks/>
        kos,
        
        /// <remarks/>
        kpe,
        
        /// <remarks/>
        krc,
        
        /// <remarks/>
        krl,
        
        /// <remarks/>
        kro,
        
        /// <remarks/>
        kru,
        
        /// <remarks/>
        kua,
        
        /// <remarks/>
        kum,
        
        /// <remarks/>
        kur,
        
        /// <remarks/>
        kut,
        
        /// <remarks/>
        lad,
        
        /// <remarks/>
        lah,
        
        /// <remarks/>
        lam,
        
        /// <remarks/>
        lao,
        
        /// <remarks/>
        lat,
        
        /// <remarks/>
        lav,
        
        /// <remarks/>
        lez,
        
        /// <remarks/>
        lim,
        
        /// <remarks/>
        lin,
        
        /// <remarks/>
        lit,
        
        /// <remarks/>
        lol,
        
        /// <remarks/>
        loz,
        
        /// <remarks/>
        ltz,
        
        /// <remarks/>
        lua,
        
        /// <remarks/>
        lub,
        
        /// <remarks/>
        lug,
        
        /// <remarks/>
        lui,
        
        /// <remarks/>
        lun,
        
        /// <remarks/>
        luo,
        
        /// <remarks/>
        lus,
        
        /// <remarks/>
        mac,
        
        /// <remarks/>
        mad,
        
        /// <remarks/>
        mag,
        
        /// <remarks/>
        mah,
        
        /// <remarks/>
        mai,
        
        /// <remarks/>
        mak,
        
        /// <remarks/>
        mal,
        
        /// <remarks/>
        man,
        
        /// <remarks/>
        mao,
        
        /// <remarks/>
        map,
        
        /// <remarks/>
        mar,
        
        /// <remarks/>
        mas,
        
        /// <remarks/>
        may,
        
        /// <remarks/>
        mdf,
        
        /// <remarks/>
        mdr,
        
        /// <remarks/>
        men,
        
        /// <remarks/>
        mga,
        
        /// <remarks/>
        mic,
        
        /// <remarks/>
        min,
        
        /// <remarks/>
        mis,
        
        /// <remarks/>
        mkh,
        
        /// <remarks/>
        mlg,
        
        /// <remarks/>
        mlt,
        
        /// <remarks/>
        mnc,
        
        /// <remarks/>
        mni,
        
        /// <remarks/>
        mno,
        
        /// <remarks/>
        moh,
        
        /// <remarks/>
        mon,
        
        /// <remarks/>
        mos,
        
        /// <remarks/>
        mul,
        
        /// <remarks/>
        mun,
        
        /// <remarks/>
        mus,
        
        /// <remarks/>
        mwl,
        
        /// <remarks/>
        mwr,
        
        /// <remarks/>
        myn,
        
        /// <remarks/>
        myv,
        
        /// <remarks/>
        nah,
        
        /// <remarks/>
        nai,
        
        /// <remarks/>
        nap,
        
        /// <remarks/>
        nau,
        
        /// <remarks/>
        nav,
        
        /// <remarks/>
        nbl,
        
        /// <remarks/>
        nde,
        
        /// <remarks/>
        ndo,
        
        /// <remarks/>
        nds,
        
        /// <remarks/>
        nep,
        
        /// <remarks/>
        @new,
        
        /// <remarks/>
        nia,
        
        /// <remarks/>
        nic,
        
        /// <remarks/>
        niu,
        
        /// <remarks/>
        nno,
        
        /// <remarks/>
        nob,
        
        /// <remarks/>
        nog,
        
        /// <remarks/>
        non,
        
        /// <remarks/>
        nor,
        
        /// <remarks/>
        nqo,
        
        /// <remarks/>
        nso,
        
        /// <remarks/>
        nub,
        
        /// <remarks/>
        nwc,
        
        /// <remarks/>
        nya,
        
        /// <remarks/>
        nym,
        
        /// <remarks/>
        nyn,
        
        /// <remarks/>
        nyo,
        
        /// <remarks/>
        nzi,
        
        /// <remarks/>
        oci,
        
        /// <remarks/>
        oji,
        
        /// <remarks/>
        ori,
        
        /// <remarks/>
        orm,
        
        /// <remarks/>
        osa,
        
        /// <remarks/>
        oss,
        
        /// <remarks/>
        ota,
        
        /// <remarks/>
        oto,
        
        /// <remarks/>
        paa,
        
        /// <remarks/>
        pag,
        
        /// <remarks/>
        pal,
        
        /// <remarks/>
        pam,
        
        /// <remarks/>
        pan,
        
        /// <remarks/>
        pap,
        
        /// <remarks/>
        pau,
        
        /// <remarks/>
        peo,
        
        /// <remarks/>
        per,
        
        /// <remarks/>
        phi,
        
        /// <remarks/>
        phn,
        
        /// <remarks/>
        pli,
        
        /// <remarks/>
        pol,
        
        /// <remarks/>
        pon,
        
        /// <remarks/>
        por,
        
        /// <remarks/>
        pra,
        
        /// <remarks/>
        pro,
        
        /// <remarks/>
        pus,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("qaa-qtz")]
        qaaqtz,
        
        /// <remarks/>
        que,
        
        /// <remarks/>
        raj,
        
        /// <remarks/>
        rap,
        
        /// <remarks/>
        rar,
        
        /// <remarks/>
        roa,
        
        /// <remarks/>
        roh,
        
        /// <remarks/>
        rom,
        
        /// <remarks/>
        rum,
        
        /// <remarks/>
        run,
        
        /// <remarks/>
        rup,
        
        /// <remarks/>
        rus,
        
        /// <remarks/>
        sad,
        
        /// <remarks/>
        sag,
        
        /// <remarks/>
        sah,
        
        /// <remarks/>
        sai,
        
        /// <remarks/>
        sal,
        
        /// <remarks/>
        sam,
        
        /// <remarks/>
        san,
        
        /// <remarks/>
        sas,
        
        /// <remarks/>
        sat,
        
        /// <remarks/>
        scn,
        
        /// <remarks/>
        sco,
        
        /// <remarks/>
        sel,
        
        /// <remarks/>
        sem,
        
        /// <remarks/>
        sga,
        
        /// <remarks/>
        sgn,
        
        /// <remarks/>
        shn,
        
        /// <remarks/>
        sid,
        
        /// <remarks/>
        sin,
        
        /// <remarks/>
        sio,
        
        /// <remarks/>
        sit,
        
        /// <remarks/>
        sla,
        
        /// <remarks/>
        slo,
        
        /// <remarks/>
        slv,
        
        /// <remarks/>
        sma,
        
        /// <remarks/>
        sme,
        
        /// <remarks/>
        smi,
        
        /// <remarks/>
        smj,
        
        /// <remarks/>
        smn,
        
        /// <remarks/>
        smo,
        
        /// <remarks/>
        sms,
        
        /// <remarks/>
        sna,
        
        /// <remarks/>
        snd,
        
        /// <remarks/>
        snk,
        
        /// <remarks/>
        sog,
        
        /// <remarks/>
        som,
        
        /// <remarks/>
        son,
        
        /// <remarks/>
        sot,
        
        /// <remarks/>
        spa,
        
        /// <remarks/>
        srd,
        
        /// <remarks/>
        srn,
        
        /// <remarks/>
        srp,
        
        /// <remarks/>
        srr,
        
        /// <remarks/>
        ssa,
        
        /// <remarks/>
        ssw,
        
        /// <remarks/>
        suk,
        
        /// <remarks/>
        sun,
        
        /// <remarks/>
        sus,
        
        /// <remarks/>
        sux,
        
        /// <remarks/>
        swa,
        
        /// <remarks/>
        swe,
        
        /// <remarks/>
        syc,
        
        /// <remarks/>
        syr,
        
        /// <remarks/>
        tah,
        
        /// <remarks/>
        tai,
        
        /// <remarks/>
        tam,
        
        /// <remarks/>
        tat,
        
        /// <remarks/>
        tel,
        
        /// <remarks/>
        tem,
        
        /// <remarks/>
        ter,
        
        /// <remarks/>
        tet,
        
        /// <remarks/>
        tgk,
        
        /// <remarks/>
        tgl,
        
        /// <remarks/>
        tha,
        
        /// <remarks/>
        tib,
        
        /// <remarks/>
        tig,
        
        /// <remarks/>
        tir,
        
        /// <remarks/>
        tiv,
        
        /// <remarks/>
        tkl,
        
        /// <remarks/>
        tlh,
        
        /// <remarks/>
        tli,
        
        /// <remarks/>
        tmh,
        
        /// <remarks/>
        tog,
        
        /// <remarks/>
        ton,
        
        /// <remarks/>
        tpi,
        
        /// <remarks/>
        tsi,
        
        /// <remarks/>
        tsn,
        
        /// <remarks/>
        tso,
        
        /// <remarks/>
        tuk,
        
        /// <remarks/>
        tum,
        
        /// <remarks/>
        tup,
        
        /// <remarks/>
        tur,
        
        /// <remarks/>
        tut,
        
        /// <remarks/>
        tvl,
        
        /// <remarks/>
        twi,
        
        /// <remarks/>
        tyv,
        
        /// <remarks/>
        udm,
        
        /// <remarks/>
        uga,
        
        /// <remarks/>
        uig,
        
        /// <remarks/>
        ukr,
        
        /// <remarks/>
        umb,
        
        /// <remarks/>
        und,
        
        /// <remarks/>
        urd,
        
        /// <remarks/>
        uzb,
        
        /// <remarks/>
        vai,
        
        /// <remarks/>
        ven,
        
        /// <remarks/>
        vie,
        
        /// <remarks/>
        vol,
        
        /// <remarks/>
        vot,
        
        /// <remarks/>
        wak,
        
        /// <remarks/>
        wal,
        
        /// <remarks/>
        war,
        
        /// <remarks/>
        was,
        
        /// <remarks/>
        wel,
        
        /// <remarks/>
        wen,
        
        /// <remarks/>
        wln,
        
        /// <remarks/>
        wol,
        
        /// <remarks/>
        xal,
        
        /// <remarks/>
        xho,
        
        /// <remarks/>
        yao,
        
        /// <remarks/>
        yap,
        
        /// <remarks/>
        yid,
        
        /// <remarks/>
        yor,
        
        /// <remarks/>
        ypk,
        
        /// <remarks/>
        zap,
        
        /// <remarks/>
        zbl,
        
        /// <remarks/>
        zen,
        
        /// <remarks/>
        zgh,
        
        /// <remarks/>
        zha,
        
        /// <remarks/>
        znd,
        
        /// <remarks/>
        zul,
        
        /// <remarks/>
        zun,
        
        /// <remarks/>
        zxx,
        
        /// <remarks/>
        zza,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MediaScanType {
        
        private MediaScanTypeMediaScanElement mediaScanElementField;
        
        private ScanType scanField;
        
        /// <remarks/>
        public MediaScanTypeMediaScanElement MediaScanElement {
            get {
                return this.mediaScanElementField;
            }
            set {
                this.mediaScanElementField = value;
            }
        }
        
        /// <remarks/>
        public ScanType Scan {
            get {
                return this.scanField;
            }
            set {
                this.scanField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum MediaScanTypeMediaScanElement {
        
        /// <remarks/>
        up,
        
        /// <remarks/>
        down,
        
        /// <remarks/>
        front,
        
        /// <remarks/>
        back,
        
        /// <remarks/>
        left,
        
        /// <remarks/>
        right,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DumpHardwareType {
        
        private string manufacturerField;
        
        private string modelField;
        
        private string revisionField;
        
        private string firmwareField;
        
        private string serialField;
        
        private ExtentType[] extentsField;
        
        private SoftwareType softwareField;
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public string Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
            }
        }
        
        /// <remarks/>
        public string Firmware {
            get {
                return this.firmwareField;
            }
            set {
                this.firmwareField = value;
            }
        }
        
        /// <remarks/>
        public string Serial {
            get {
                return this.serialField;
            }
            set {
                this.serialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Extent", IsNullable=false)]
        public ExtentType[] Extents {
            get {
                return this.extentsField;
            }
            set {
                this.extentsField = value;
            }
        }
        
        /// <remarks/>
        public SoftwareType Software {
            get {
                return this.softwareField;
            }
            set {
                this.softwareField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExtentType {
        
        private int startField;
        
        private int endField;
        
        /// <remarks/>
        public int Start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        public int End {
            get {
                return this.endField;
            }
            set {
                this.endField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SoftwareType {
        
        private string nameField;
        
        private string versionField;
        
        private string operatingSystemField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string OperatingSystem {
            get {
                return this.operatingSystemField;
            }
            set {
                this.operatingSystemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BlockTrackType {
        
        private ImageType imageField;
        
        private long sizeField;
        
        private long headField;
        
        private long cylinderField;
        
        private long startSectorField;
        
        private long endSectorField;
        
        private long sectorsField;
        
        private int bytesPerSectorField;
        
        private ChecksumType[] checksumsField;
        
        private string formatField;
        
        /// <remarks/>
        public ImageType Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public long Head {
            get {
                return this.headField;
            }
            set {
                this.headField = value;
            }
        }
        
        /// <remarks/>
        public long Cylinder {
            get {
                return this.cylinderField;
            }
            set {
                this.cylinderField = value;
            }
        }
        
        /// <remarks/>
        public long StartSector {
            get {
                return this.startSectorField;
            }
            set {
                this.startSectorField = value;
            }
        }
        
        /// <remarks/>
        public long EndSector {
            get {
                return this.endSectorField;
            }
            set {
                this.endSectorField = value;
            }
        }
        
        /// <remarks/>
        public long Sectors {
            get {
                return this.sectorsField;
            }
            set {
                this.sectorsField = value;
            }
        }
        
        /// <remarks/>
        public int BytesPerSector {
            get {
                return this.bytesPerSectorField;
            }
            set {
                this.bytesPerSectorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Checksum", IsNullable=false)]
        public ChecksumType[] Checksums {
            get {
                return this.checksumsField;
            }
            set {
                this.checksumsField = value;
            }
        }
        
        /// <remarks/>
        public string Format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class USBType {
        
        private int vendorIDField;
        
        private int productIDField;
        
        private DumpType descriptorsField;
        
        /// <remarks/>
        public int VendorID {
            get {
                return this.vendorIDField;
            }
            set {
                this.vendorIDField = value;
            }
        }
        
        /// <remarks/>
        public int ProductID {
            get {
                return this.productIDField;
            }
            set {
                this.productIDField = value;
            }
        }
        
        /// <remarks/>
        public DumpType Descriptors {
            get {
                return this.descriptorsField;
            }
            set {
                this.descriptorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DumpType {
        
        private string imageField;
        
        private int sizeField;
        
        private ChecksumType[] checksumsField;
        
        /// <remarks/>
        public string Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public int Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Checksum", IsNullable=false)]
        public ChecksumType[] Checksums {
            get {
                return this.checksumsField;
            }
            set {
                this.checksumsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EVPDType {
        
        private string imageField;
        
        private long sizeField;
        
        private ChecksumType[] checksumsField;
        
        private int pageField;
        
        private bool pageFieldSpecified;
        
        /// <remarks/>
        public string Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Checksum", IsNullable=false)]
        public ChecksumType[] Checksums {
            get {
                return this.checksumsField;
            }
            set {
                this.checksumsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int page {
            get {
                return this.pageField;
            }
            set {
                this.pageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool pageSpecified {
            get {
                return this.pageFieldSpecified;
            }
            set {
                this.pageFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCSIType {
        
        private DumpType inquiryField;
        
        private EVPDType[] eVPDField;
        
        private DumpType modeSenseField;
        
        private DumpType modeSense10Field;
        
        private DumpType logSenseField;
        
        /// <remarks/>
        public DumpType Inquiry {
            get {
                return this.inquiryField;
            }
            set {
                this.inquiryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EVPD")]
        public EVPDType[] EVPD {
            get {
                return this.eVPDField;
            }
            set {
                this.eVPDField = value;
            }
        }
        
        /// <remarks/>
        public DumpType ModeSense {
            get {
                return this.modeSenseField;
            }
            set {
                this.modeSenseField = value;
            }
        }
        
        /// <remarks/>
        public DumpType ModeSense10 {
            get {
                return this.modeSense10Field;
            }
            set {
                this.modeSense10Field = value;
            }
        }
        
        /// <remarks/>
        public DumpType LogSense {
            get {
                return this.logSenseField;
            }
            set {
                this.logSenseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SecureDigitalType {
        
        private DumpType cIDField;
        
        private DumpType cSDField;
        
        private DumpType extendedCSDField;
        
        /// <remarks/>
        public DumpType CID {
            get {
                return this.cIDField;
            }
            set {
                this.cIDField = value;
            }
        }
        
        /// <remarks/>
        public DumpType CSD {
            get {
                return this.cSDField;
            }
            set {
                this.cSDField = value;
            }
        }
        
        /// <remarks/>
        public DumpType ExtendedCSD {
            get {
                return this.extendedCSDField;
            }
            set {
                this.extendedCSDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ATAType {
        
        private DumpType identifyField;
        
        /// <remarks/>
        public DumpType Identify {
            get {
                return this.identifyField;
            }
            set {
                this.identifyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TapeFileType {
        
        private ImageType imageField;
        
        private long sizeField;
        
        private long sequenceField;
        
        private long startBlockField;
        
        private long endBlockField;
        
        private ChecksumType[] checksumsField;
        
        /// <remarks/>
        public ImageType Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public long Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public long StartBlock {
            get {
                return this.startBlockField;
            }
            set {
                this.startBlockField = value;
            }
        }
        
        /// <remarks/>
        public long EndBlock {
            get {
                return this.endBlockField;
            }
            set {
                this.endBlockField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Checksum", IsNullable=false)]
        public ChecksumType[] Checksums {
            get {
                return this.checksumsField;
            }
            set {
                this.checksumsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TapePartitionType {
        
        private ImageType imageField;
        
        private long sizeField;
        
        private long sequenceField;
        
        private long startBlockField;
        
        private long endBlockField;
        
        private ChecksumType[] checksumsField;
        
        private TapeFileType[] fileField;
        
        /// <remarks/>
        public ImageType Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public long Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public long StartBlock {
            get {
                return this.startBlockField;
            }
            set {
                this.startBlockField = value;
            }
        }
        
        /// <remarks/>
        public long EndBlock {
            get {
                return this.endBlockField;
            }
            set {
                this.endBlockField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Checksum", IsNullable=false)]
        public ChecksumType[] Checksums {
            get {
                return this.checksumsField;
            }
            set {
                this.checksumsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("File")]
        public TapeFileType[] File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BlockSizeType {
        
        private int startingBlockField;
        
        private int valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int startingBlock {
            get {
                return this.startingBlockField;
            }
            set {
                this.startingBlockField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public int Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BlockMediaType {
        
        private ImageType imageField;
        
        private long sizeField;
        
        private ChecksumType[] checksumsField;
        
        private SequenceType sequenceField;
        
        private string manufacturerField;
        
        private string modelField;
        
        private string serialField;
        
        private string firmwareField;
        
        private string interfaceField;
        
        private int physicalBlockSizeField;
        
        private int logicalBlockSizeField;
        
        private long logicalBlocksField;
        
        private BlockSizeType[] variableBlockSizeField;
        
        private TapePartitionType[] tapeInformationField;
        
        private ScansType scansField;
        
        private ATAType aTAField;
        
        private PCIType pCIField;
        
        private PCMCIAType pCMCIAField;
        
        private SecureDigitalType secureDigitalField;
        
        private SCSIType sCSIField;
        
        private USBType uSBField;
        
        private DumpType mAMField;
        
        private long headsField;
        
        private bool headsFieldSpecified;
        
        private long cylindersField;
        
        private bool cylindersFieldSpecified;
        
        private long sectorsPerTrackField;
        
        private bool sectorsPerTrackFieldSpecified;
        
        private BlockTrackType[] trackField;
        
        private string copyProtectionField;
        
        private DimensionsType dimensionsField;
        
        private PartitionType[] fileSystemInformationField;
        
        private DumpHardwareType[] dumpHardwareArrayField;
        
        private string diskTypeField;
        
        private string diskSubTypeField;
        
        /// <remarks/>
        public ImageType Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Checksum", IsNullable=false)]
        public ChecksumType[] Checksums {
            get {
                return this.checksumsField;
            }
            set {
                this.checksumsField = value;
            }
        }
        
        /// <remarks/>
        public SequenceType Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public string Serial {
            get {
                return this.serialField;
            }
            set {
                this.serialField = value;
            }
        }
        
        /// <remarks/>
        public string Firmware {
            get {
                return this.firmwareField;
            }
            set {
                this.firmwareField = value;
            }
        }
        
        /// <remarks/>
        public string Interface {
            get {
                return this.interfaceField;
            }
            set {
                this.interfaceField = value;
            }
        }
        
        /// <remarks/>
        public int PhysicalBlockSize {
            get {
                return this.physicalBlockSizeField;
            }
            set {
                this.physicalBlockSizeField = value;
            }
        }
        
        /// <remarks/>
        public int LogicalBlockSize {
            get {
                return this.logicalBlockSizeField;
            }
            set {
                this.logicalBlockSizeField = value;
            }
        }
        
        /// <remarks/>
        public long LogicalBlocks {
            get {
                return this.logicalBlocksField;
            }
            set {
                this.logicalBlocksField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("BlockSize", IsNullable=false)]
        public BlockSizeType[] VariableBlockSize {
            get {
                return this.variableBlockSizeField;
            }
            set {
                this.variableBlockSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Partition", IsNullable=false)]
        public TapePartitionType[] TapeInformation {
            get {
                return this.tapeInformationField;
            }
            set {
                this.tapeInformationField = value;
            }
        }
        
        /// <remarks/>
        public ScansType Scans {
            get {
                return this.scansField;
            }
            set {
                this.scansField = value;
            }
        }
        
        /// <remarks/>
        public ATAType ATA {
            get {
                return this.aTAField;
            }
            set {
                this.aTAField = value;
            }
        }
        
        /// <remarks/>
        public PCIType PCI {
            get {
                return this.pCIField;
            }
            set {
                this.pCIField = value;
            }
        }
        
        /// <remarks/>
        public PCMCIAType PCMCIA {
            get {
                return this.pCMCIAField;
            }
            set {
                this.pCMCIAField = value;
            }
        }
        
        /// <remarks/>
        public SecureDigitalType SecureDigital {
            get {
                return this.secureDigitalField;
            }
            set {
                this.secureDigitalField = value;
            }
        }
        
        /// <remarks/>
        public SCSIType SCSI {
            get {
                return this.sCSIField;
            }
            set {
                this.sCSIField = value;
            }
        }
        
        /// <remarks/>
        public USBType USB {
            get {
                return this.uSBField;
            }
            set {
                this.uSBField = value;
            }
        }
        
        /// <remarks/>
        public DumpType MAM {
            get {
                return this.mAMField;
            }
            set {
                this.mAMField = value;
            }
        }
        
        /// <remarks/>
        public long Heads {
            get {
                return this.headsField;
            }
            set {
                this.headsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeadsSpecified {
            get {
                return this.headsFieldSpecified;
            }
            set {
                this.headsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long Cylinders {
            get {
                return this.cylindersField;
            }
            set {
                this.cylindersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CylindersSpecified {
            get {
                return this.cylindersFieldSpecified;
            }
            set {
                this.cylindersFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long SectorsPerTrack {
            get {
                return this.sectorsPerTrackField;
            }
            set {
                this.sectorsPerTrackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SectorsPerTrackSpecified {
            get {
                return this.sectorsPerTrackFieldSpecified;
            }
            set {
                this.sectorsPerTrackFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Track")]
        public BlockTrackType[] Track {
            get {
                return this.trackField;
            }
            set {
                this.trackField = value;
            }
        }
        
        /// <remarks/>
        public string CopyProtection {
            get {
                return this.copyProtectionField;
            }
            set {
                this.copyProtectionField = value;
            }
        }
        
        /// <remarks/>
        public DimensionsType Dimensions {
            get {
                return this.dimensionsField;
            }
            set {
                this.dimensionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Partition", IsNullable=false)]
        public PartitionType[] FileSystemInformation {
            get {
                return this.fileSystemInformationField;
            }
            set {
                this.fileSystemInformationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("DumpHardware", IsNullable=false)]
        public DumpHardwareType[] DumpHardwareArray {
            get {
                return this.dumpHardwareArrayField;
            }
            set {
                this.dumpHardwareArrayField = value;
            }
        }
        
        /// <remarks/>
        public string DiskType {
            get {
                return this.diskTypeField;
            }
            set {
                this.diskTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DiskSubType {
            get {
                return this.diskSubTypeField;
            }
            set {
                this.diskSubTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PCIType {
        
        private int vendorIDField;
        
        private int deviceIDField;
        
        private DumpType configurationField;
        
        private LinearMediaType expansionROMField;
        
        /// <remarks/>
        public int VendorID {
            get {
                return this.vendorIDField;
            }
            set {
                this.vendorIDField = value;
            }
        }
        
        /// <remarks/>
        public int DeviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        public DumpType Configuration {
            get {
                return this.configurationField;
            }
            set {
                this.configurationField = value;
            }
        }
        
        /// <remarks/>
        public LinearMediaType ExpansionROM {
            get {
                return this.expansionROMField;
            }
            set {
                this.expansionROMField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LinearMediaType {
        
        private ImageType imageField;
        
        private long sizeField;
        
        private ChecksumType[] imageChecksumsField;
        
        private ChecksumType[] checksumsField;
        
        private string titleField;
        
        private int sequenceField;
        
        private bool sequenceFieldSpecified;
        
        private int imageInterleaveField;
        
        private bool imageInterleaveFieldSpecified;
        
        private int interleaveField;
        
        private bool interleaveFieldSpecified;
        
        private string manufacturerField;
        
        private string modelField;
        
        private string packageField;
        
        private string interfaceField;
        
        private DimensionsType dimensionsField;
        
        private ScansType scansField;
        
        private DumpHardwareType[] dumpHardwareArrayField;
        
        private PCMCIAType pCMCIAField;
        
        private string copyProtectionField;
        
        /// <remarks/>
        public ImageType Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Checksum", IsNullable=false)]
        public ChecksumType[] ImageChecksums {
            get {
                return this.imageChecksumsField;
            }
            set {
                this.imageChecksumsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Checksum", IsNullable=false)]
        public ChecksumType[] Checksums {
            get {
                return this.checksumsField;
            }
            set {
                this.checksumsField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SequenceSpecified {
            get {
                return this.sequenceFieldSpecified;
            }
            set {
                this.sequenceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ImageInterleave {
            get {
                return this.imageInterleaveField;
            }
            set {
                this.imageInterleaveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImageInterleaveSpecified {
            get {
                return this.imageInterleaveFieldSpecified;
            }
            set {
                this.imageInterleaveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Interleave {
            get {
                return this.interleaveField;
            }
            set {
                this.interleaveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InterleaveSpecified {
            get {
                return this.interleaveFieldSpecified;
            }
            set {
                this.interleaveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Model {
            get {
                return this.modelField;
            }
            set {
                this.modelField = value;
            }
        }
        
        /// <remarks/>
        public string Package {
            get {
                return this.packageField;
            }
            set {
                this.packageField = value;
            }
        }
        
        /// <remarks/>
        public string Interface {
            get {
                return this.interfaceField;
            }
            set {
                this.interfaceField = value;
            }
        }
        
        /// <remarks/>
        public DimensionsType Dimensions {
            get {
                return this.dimensionsField;
            }
            set {
                this.dimensionsField = value;
            }
        }
        
        /// <remarks/>
        public ScansType Scans {
            get {
                return this.scansField;
            }
            set {
                this.scansField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("DumpHardware", IsNullable=false)]
        public DumpHardwareType[] DumpHardwareArray {
            get {
                return this.dumpHardwareArrayField;
            }
            set {
                this.dumpHardwareArrayField = value;
            }
        }
        
        /// <remarks/>
        public PCMCIAType PCMCIA {
            get {
                return this.pCMCIAField;
            }
            set {
                this.pCMCIAField = value;
            }
        }
        
        /// <remarks/>
        public string CopyProtection {
            get {
                return this.copyProtectionField;
            }
            set {
                this.copyProtectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PCMCIAType {
        
        private DumpType cISField;
        
        private string complianceField;
        
        private ushort manufacturerCodeField;
        
        private bool manufacturerCodeFieldSpecified;
        
        private ushort cardCodeField;
        
        private bool cardCodeFieldSpecified;
        
        private string manufacturerField;
        
        private string productNameField;
        
        private string[] additionalInformationField;
        
        /// <remarks/>
        public DumpType CIS {
            get {
                return this.cISField;
            }
            set {
                this.cISField = value;
            }
        }
        
        /// <remarks/>
        public string Compliance {
            get {
                return this.complianceField;
            }
            set {
                this.complianceField = value;
            }
        }
        
        /// <remarks/>
        public ushort ManufacturerCode {
            get {
                return this.manufacturerCodeField;
            }
            set {
                this.manufacturerCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ManufacturerCodeSpecified {
            get {
                return this.manufacturerCodeFieldSpecified;
            }
            set {
                this.manufacturerCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public ushort CardCode {
            get {
                return this.cardCodeField;
            }
            set {
                this.cardCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CardCodeSpecified {
            get {
                return this.cardCodeFieldSpecified;
            }
            set {
                this.cardCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AdditionalInformation")]
        public string[] AdditionalInformation {
            get {
                return this.additionalInformationField;
            }
            set {
                this.additionalInformationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PartitionType {
        
        private int sequenceField;
        
        private string nameField;
        
        private string typeField;
        
        private int startSectorField;
        
        private int endSectorField;
        
        private string descriptionField;
        
        private FileSystemType[] fileSystemsField;
        
        /// <remarks/>
        public int Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int StartSector {
            get {
                return this.startSectorField;
            }
            set {
                this.startSectorField = value;
            }
        }
        
        /// <remarks/>
        public int EndSector {
            get {
                return this.endSectorField;
            }
            set {
                this.endSectorField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("FileSystem", IsNullable=false)]
        public FileSystemType[] FileSystems {
            get {
                return this.fileSystemsField;
            }
            set {
                this.fileSystemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileSystemType {
        
        private string typeField;
        
        private System.DateTime creationDateField;
        
        private bool creationDateFieldSpecified;
        
        private System.DateTime modificationDateField;
        
        private bool modificationDateFieldSpecified;
        
        private System.DateTime backupDateField;
        
        private bool backupDateFieldSpecified;
        
        private int clusterSizeField;
        
        private long clustersField;
        
        private long filesField;
        
        private bool filesFieldSpecified;
        
        private bool bootableField;
        
        private string volumeSerialField;
        
        private string volumeNameField;
        
        private long freeClustersField;
        
        private bool freeClustersFieldSpecified;
        
        private bool dirtyField;
        
        private System.DateTime expirationDateField;
        
        private bool expirationDateFieldSpecified;
        
        private System.DateTime effectiveDateField;
        
        private bool effectiveDateFieldSpecified;
        
        private string systemIdentifierField;
        
        private string volumeSetIdentifierField;
        
        private string publisherIdentifierField;
        
        private string dataPreparerIdentifierField;
        
        private string applicationIdentifierField;
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreationDateSpecified {
            get {
                return this.creationDateFieldSpecified;
            }
            set {
                this.creationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModificationDate {
            get {
                return this.modificationDateField;
            }
            set {
                this.modificationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ModificationDateSpecified {
            get {
                return this.modificationDateFieldSpecified;
            }
            set {
                this.modificationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BackupDate {
            get {
                return this.backupDateField;
            }
            set {
                this.backupDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BackupDateSpecified {
            get {
                return this.backupDateFieldSpecified;
            }
            set {
                this.backupDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ClusterSize {
            get {
                return this.clusterSizeField;
            }
            set {
                this.clusterSizeField = value;
            }
        }
        
        /// <remarks/>
        public long Clusters {
            get {
                return this.clustersField;
            }
            set {
                this.clustersField = value;
            }
        }
        
        /// <remarks/>
        public long Files {
            get {
                return this.filesField;
            }
            set {
                this.filesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FilesSpecified {
            get {
                return this.filesFieldSpecified;
            }
            set {
                this.filesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Bootable {
            get {
                return this.bootableField;
            }
            set {
                this.bootableField = value;
            }
        }
        
        /// <remarks/>
        public string VolumeSerial {
            get {
                return this.volumeSerialField;
            }
            set {
                this.volumeSerialField = value;
            }
        }
        
        /// <remarks/>
        public string VolumeName {
            get {
                return this.volumeNameField;
            }
            set {
                this.volumeNameField = value;
            }
        }
        
        /// <remarks/>
        public long FreeClusters {
            get {
                return this.freeClustersField;
            }
            set {
                this.freeClustersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreeClustersSpecified {
            get {
                return this.freeClustersFieldSpecified;
            }
            set {
                this.freeClustersFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Dirty {
            get {
                return this.dirtyField;
            }
            set {
                this.dirtyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpirationDateSpecified {
            get {
                return this.expirationDateFieldSpecified;
            }
            set {
                this.expirationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EffectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EffectiveDateSpecified {
            get {
                return this.effectiveDateFieldSpecified;
            }
            set {
                this.effectiveDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string SystemIdentifier {
            get {
                return this.systemIdentifierField;
            }
            set {
                this.systemIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string VolumeSetIdentifier {
            get {
                return this.volumeSetIdentifierField;
            }
            set {
                this.volumeSetIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string PublisherIdentifier {
            get {
                return this.publisherIdentifierField;
            }
            set {
                this.publisherIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string DataPreparerIdentifier {
            get {
                return this.dataPreparerIdentifierField;
            }
            set {
                this.dataPreparerIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public string ApplicationIdentifier {
            get {
                return this.applicationIdentifierField;
            }
            set {
                this.applicationIdentifierField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CoordinatesType {
        
        private double latitudeField;
        
        private double longitudeField;
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecordingType {
        
        private string broadcasterField;
        
        private string broadcastPlatformField;
        
        private RecordingTypeSourceFormat sourceFormatField;
        
        private System.DateTime timestampField;
        
        private SoftwareType[] softwareField;
        
        private CoordinatesType coordinatesField;
        
        /// <remarks/>
        public string Broadcaster {
            get {
                return this.broadcasterField;
            }
            set {
                this.broadcasterField = value;
            }
        }
        
        /// <remarks/>
        public string BroadcastPlatform {
            get {
                return this.broadcastPlatformField;
            }
            set {
                this.broadcastPlatformField = value;
            }
        }
        
        /// <remarks/>
        public RecordingTypeSourceFormat SourceFormat {
            get {
                return this.sourceFormatField;
            }
            set {
                this.sourceFormatField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Software")]
        public SoftwareType[] Software {
            get {
                return this.softwareField;
            }
            set {
                this.softwareField = value;
            }
        }
        
        /// <remarks/>
        public CoordinatesType Coordinates {
            get {
                return this.coordinatesField;
            }
            set {
                this.coordinatesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum RecordingTypeSourceFormat {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ITU-A")]
        ITUA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ITU-B")]
        ITUB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ITU-C")]
        ITUC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ITU-D")]
        ITUD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ITU-E")]
        ITUE,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ITU-F")]
        ITUF,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ITU-G")]
        ITUG,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ITU-H")]
        ITUH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ITU-I")]
        ITUI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ITU-J")]
        ITUJ,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ITU-K")]
        ITUK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ITU-L")]
        ITUL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ITU-M")]
        ITUM,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ITU-N")]
        ITUN,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PAL-B")]
        PALB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SECAM-B")]
        SECAMB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PAL-D")]
        PALD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SECAM-D")]
        SECAMD,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PAL-G")]
        PALG,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SECAM-G")]
        SECAMG,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PAL-H")]
        PALH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PAL-I")]
        PALI,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PAL-K")]
        PALK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SECAM-K")]
        SECAMK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NTSC-M")]
        NTSCM,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PAL-N")]
        PALN,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("PAL-M")]
        PALM,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SECAM-M")]
        SECAMM,
        
        /// <remarks/>
        MUSE,
        
        /// <remarks/>
        PALplus,
        
        /// <remarks/>
        FM,
        
        /// <remarks/>
        AM,
        
        /// <remarks/>
        COFDM,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("CAM-D")]
        CAMD,
        
        /// <remarks/>
        DAB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DAB+")]
        DAB1,
        
        /// <remarks/>
        DRM,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DRM+")]
        DRM1,
        
        /// <remarks/>
        FMeXtra,
        
        /// <remarks/>
        ATSC,
        
        /// <remarks/>
        ATSC2,
        
        /// <remarks/>
        ATSC3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ATSC-M/H")]
        ATSCMH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DVB-T")]
        DVBT,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DVB-T2")]
        DVBT2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DVB-S")]
        DVBS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DVB-S2")]
        DVBS2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DVB-S2X")]
        DVBS2X,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DVB-C")]
        DVBC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DVB-C2")]
        DVBC2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DVB-H")]
        DVBH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DVB-NGH")]
        DVBNGH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DVB-SH")]
        DVBSH,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ISDB-T")]
        ISDBT,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ISDB-Tb")]
        ISDBTb,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ISDB-S")]
        ISDBS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ISDB-C")]
        ISDBC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1seg")]
        Item1seg,
        
        /// <remarks/>
        DTMB,
        
        /// <remarks/>
        CCMB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("T-DMB")]
        TDMB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("S-DMB")]
        SDMB,
        
        /// <remarks/>
        IPTV,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DVB-MT")]
        DVBMT,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DVB-MC")]
        DVBMC,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("DVB-MS")]
        DVBMS,
        
        /// <remarks/>
        ADR,
        
        /// <remarks/>
        SDR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubtitleTracksType {
        
        private LanguagesTypeLanguage[] languagesField;
        
        private int trackNumberField;
        
        private string codecField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Language", IsNullable=false)]
        public LanguagesTypeLanguage[] Languages {
            get {
                return this.languagesField;
            }
            set {
                this.languagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TrackNumber {
            get {
                return this.trackNumberField;
            }
            set {
                this.trackNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Codec {
            get {
                return this.codecField;
            }
            set {
                this.codecField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VideoTracksType {
        
        private LanguagesTypeLanguage[] languagesField;
        
        private int trackNumberField;
        
        private string codecField;
        
        private int horizontalField;
        
        private int verticalField;
        
        private long meanBitrateField;
        
        private bool threeDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Language", IsNullable=false)]
        public LanguagesTypeLanguage[] Languages {
            get {
                return this.languagesField;
            }
            set {
                this.languagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TrackNumber {
            get {
                return this.trackNumberField;
            }
            set {
                this.trackNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Codec {
            get {
                return this.codecField;
            }
            set {
                this.codecField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Horizontal {
            get {
                return this.horizontalField;
            }
            set {
                this.horizontalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Vertical {
            get {
                return this.verticalField;
            }
            set {
                this.verticalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long MeanBitrate {
            get {
                return this.meanBitrateField;
            }
            set {
                this.meanBitrateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ThreeD {
            get {
                return this.threeDField;
            }
            set {
                this.threeDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AudioTracksType {
        
        private LanguagesTypeLanguage[] languagesField;
        
        private int trackNumberField;
        
        private string accoustIDField;
        
        private string codecField;
        
        private int channelsField;
        
        private int sampleRateField;
        
        private long meanBitrateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Language", IsNullable=false)]
        public LanguagesTypeLanguage[] Languages {
            get {
                return this.languagesField;
            }
            set {
                this.languagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TrackNumber {
            get {
                return this.trackNumberField;
            }
            set {
                this.trackNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AccoustID {
            get {
                return this.accoustIDField;
            }
            set {
                this.accoustIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Codec {
            get {
                return this.codecField;
            }
            set {
                this.codecField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Channels {
            get {
                return this.channelsField;
            }
            set {
                this.channelsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SampleRate {
            get {
                return this.sampleRateField;
            }
            set {
                this.sampleRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long MeanBitrate {
            get {
                return this.meanBitrateField;
            }
            set {
                this.meanBitrateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdvertisementType {
        
        private string manufacturerField;
        
        private string productField;
        
        private FileType fileField;
        
        private long fileSizeField;
        
        private long framesField;
        
        private bool framesFieldSpecified;
        
        private long durationField;
        
        private int meanFrameRateField;
        
        private bool meanFrameRateFieldSpecified;
        
        private ChecksumType[] checksumsField;
        
        private AudioTracksType[] audioTrackField;
        
        private VideoTracksType[] videoTrackField;
        
        private SubtitleTracksType[] subtitleTrackField;
        
        private RecordingType recordingField;
        
        /// <remarks/>
        public string Manufacturer {
            get {
                return this.manufacturerField;
            }
            set {
                this.manufacturerField = value;
            }
        }
        
        /// <remarks/>
        public string Product {
            get {
                return this.productField;
            }
            set {
                this.productField = value;
            }
        }
        
        /// <remarks/>
        public FileType File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
        
        /// <remarks/>
        public long FileSize {
            get {
                return this.fileSizeField;
            }
            set {
                this.fileSizeField = value;
            }
        }
        
        /// <remarks/>
        public long Frames {
            get {
                return this.framesField;
            }
            set {
                this.framesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FramesSpecified {
            get {
                return this.framesFieldSpecified;
            }
            set {
                this.framesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public int MeanFrameRate {
            get {
                return this.meanFrameRateField;
            }
            set {
                this.meanFrameRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MeanFrameRateSpecified {
            get {
                return this.meanFrameRateFieldSpecified;
            }
            set {
                this.meanFrameRateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Checksum", IsNullable=false)]
        public ChecksumType[] Checksums {
            get {
                return this.checksumsField;
            }
            set {
                this.checksumsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AudioTrack")]
        public AudioTracksType[] AudioTrack {
            get {
                return this.audioTrackField;
            }
            set {
                this.audioTrackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("VideoTrack")]
        public VideoTracksType[] VideoTrack {
            get {
                return this.videoTrackField;
            }
            set {
                this.videoTrackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SubtitleTrack")]
        public SubtitleTracksType[] SubtitleTrack {
            get {
                return this.subtitleTrackField;
            }
            set {
                this.subtitleTrackField = value;
            }
        }
        
        /// <remarks/>
        public RecordingType Recording {
            get {
                return this.recordingField;
            }
            set {
                this.recordingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubChannelType {
        
        private ImageType imageField;
        
        private long sizeField;
        
        private ChecksumType[] checksumsField;
        
        /// <remarks/>
        public ImageType Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Checksum", IsNullable=false)]
        public ChecksumType[] Checksums {
            get {
                return this.checksumsField;
            }
            set {
                this.checksumsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TrackSequenceType {
        
        private int trackNumberField;
        
        private int sessionField;
        
        /// <remarks/>
        public int TrackNumber {
            get {
                return this.trackNumberField;
            }
            set {
                this.trackNumberField = value;
            }
        }
        
        /// <remarks/>
        public int Session {
            get {
                return this.sessionField;
            }
            set {
                this.sessionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TrackType {
        
        private ImageType imageField;
        
        private long sizeField;
        
        private TrackSequenceType sequenceField;
        
        private string startMSFField;
        
        private string endMSFField;
        
        private long startSectorField;
        
        private long endSectorField;
        
        private TrackTypeTrackType trackType1Field;
        
        private int bytesPerSectorField;
        
        private string accoustIDField;
        
        private ChecksumType[] checksumsField;
        
        private SubChannelType subChannelField;
        
        private PartitionType[] fileSystemInformationField;
        
        /// <remarks/>
        public ImageType Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public TrackSequenceType Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public string StartMSF {
            get {
                return this.startMSFField;
            }
            set {
                this.startMSFField = value;
            }
        }
        
        /// <remarks/>
        public string EndMSF {
            get {
                return this.endMSFField;
            }
            set {
                this.endMSFField = value;
            }
        }
        
        /// <remarks/>
        public long StartSector {
            get {
                return this.startSectorField;
            }
            set {
                this.startSectorField = value;
            }
        }
        
        /// <remarks/>
        public long EndSector {
            get {
                return this.endSectorField;
            }
            set {
                this.endSectorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TrackType")]
        public TrackTypeTrackType TrackType1 {
            get {
                return this.trackType1Field;
            }
            set {
                this.trackType1Field = value;
            }
        }
        
        /// <remarks/>
        public int BytesPerSector {
            get {
                return this.bytesPerSectorField;
            }
            set {
                this.bytesPerSectorField = value;
            }
        }
        
        /// <remarks/>
        public string AccoustID {
            get {
                return this.accoustIDField;
            }
            set {
                this.accoustIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Checksum", IsNullable=false)]
        public ChecksumType[] Checksums {
            get {
                return this.checksumsField;
            }
            set {
                this.checksumsField = value;
            }
        }
        
        /// <remarks/>
        public SubChannelType SubChannel {
            get {
                return this.subChannelField;
            }
            set {
                this.subChannelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Partition", IsNullable=false)]
        public PartitionType[] FileSystemInformation {
            get {
                return this.fileSystemInformationField;
            }
            set {
                this.fileSystemInformationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum TrackTypeTrackType {
        
        /// <remarks/>
        audio,
        
        /// <remarks/>
        mode0,
        
        /// <remarks/>
        mode1,
        
        /// <remarks/>
        mode2,
        
        /// <remarks/>
        m2f1,
        
        /// <remarks/>
        m2f2,
        
        /// <remarks/>
        dvd,
        
        /// <remarks/>
        hddvd,
        
        /// <remarks/>
        bluray,
        
        /// <remarks/>
        ddcd,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PS3EncryptionType {
        
        private string keyField;
        
        private string serialField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Serial {
            get {
                return this.serialField;
            }
            set {
                this.serialField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SecuritySectorsType {
        
        private long startField;
        
        private long endField;
        
        /// <remarks/>
        public long Start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        public long End {
            get {
                return this.endField;
            }
            set {
                this.endField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BorderType {
        
        private string imageField;
        
        private long sizeField;
        
        private ChecksumType[] checksumsField;
        
        private int sessionField;
        
        private bool sessionFieldSpecified;
        
        /// <remarks/>
        public string Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Checksum", IsNullable=false)]
        public ChecksumType[] Checksums {
            get {
                return this.checksumsField;
            }
            set {
                this.checksumsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int session {
            get {
                return this.sessionField;
            }
            set {
                this.sessionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sessionSpecified {
            get {
                return this.sessionFieldSpecified;
            }
            set {
                this.sessionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CaseType {
        
        private CaseTypeCaseType caseType1Field;
        
        private ScansType scansField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CaseType")]
        public CaseTypeCaseType CaseType1 {
            get {
                return this.caseType1Field;
            }
            set {
                this.caseType1Field = value;
            }
        }
        
        /// <remarks/>
        public ScansType Scans {
            get {
                return this.scansField;
            }
            set {
                this.scansField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum CaseTypeCaseType {
        
        /// <remarks/>
        jewel,
        
        /// <remarks/>
        bigjewel,
        
        /// <remarks/>
        slimjewel,
        
        /// <remarks/>
        sleeve,
        
        /// <remarks/>
        qpack,
        
        /// <remarks/>
        digisleeve,
        
        /// <remarks/>
        discboxslider,
        
        /// <remarks/>
        compacplus,
        
        /// <remarks/>
        keepcase,
        
        /// <remarks/>
        snapcase,
        
        /// <remarks/>
        softcase,
        
        /// <remarks/>
        ecopack,
        
        /// <remarks/>
        liftlock,
        
        /// <remarks/>
        spindle,
        
        /// <remarks/>
        ps2case,
        
        /// <remarks/>
        ps3case,
        
        /// <remarks/>
        bluraykeepcase,
        
        /// <remarks/>
        pscase,
        
        /// <remarks/>
        dccase,
        
        /// <remarks/>
        saturncase,
        
        /// <remarks/>
        xboxcase,
        
        /// <remarks/>
        saturnbigcase,
        
        /// <remarks/>
        gccase,
        
        /// <remarks/>
        wiicase,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LayeredTextType {
        
        private int layerField;
        
        private bool layerFieldSpecified;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int layer {
            get {
                return this.layerField;
            }
            set {
                this.layerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool layerSpecified {
            get {
                return this.layerFieldSpecified;
            }
            set {
                this.layerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SectorsType {
        
        private int layerField;
        
        private bool layerFieldSpecified;
        
        private long valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int layer {
            get {
                return this.layerField;
            }
            set {
                this.layerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool layerSpecified {
            get {
                return this.layerFieldSpecified;
            }
            set {
                this.layerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public long Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LayersType {
        
        private SectorsType[] sectorsField;
        
        private LayersTypeType typeField;
        
        private bool typeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Sectors")]
        public SectorsType[] Sectors {
            get {
                return this.sectorsField;
            }
            set {
                this.sectorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public LayersTypeType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum LayersTypeType {
        
        /// <remarks/>
        PTP,
        
        /// <remarks/>
        OTP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpticalDiscType {
        
        private ImageType imageField;
        
        private long sizeField;
        
        private SequenceType sequenceField;
        
        private LayersType layersField;
        
        private ChecksumType[] checksumsField;
        
        private LayeredTextType[] ringCodeField;
        
        private LayeredTextType[] masteringSIDField;
        
        private LayeredTextType[] toolstampField;
        
        private LayeredTextType[] mouldSIDField;
        
        private LayeredTextType[] mouldTextField;
        
        private string discTypeField;
        
        private string discSubTypeField;
        
        private int offsetField;
        
        private bool offsetFieldSpecified;
        
        private int[] tracksField;
        
        private int sessionsField;
        
        private string copyProtectionField;
        
        private DimensionsType dimensionsField;
        
        private CaseType caseField;
        
        private ScansType scansField;
        
        private DumpType pFIField;
        
        private DumpType dMIField;
        
        private DumpType cMIField;
        
        private DumpType bCAField;
        
        private DumpType aTIPField;
        
        private DumpType aDIPField;
        
        private DumpType pMAField;
        
        private DumpType dDSField;
        
        private DumpType sAIField;
        
        private DumpType lastRMDField;
        
        private DumpType pRIField;
        
        private DumpType mediaIDField;
        
        private DumpType pFIRField;
        
        private DumpType dCBField;
        
        private DumpType diField;
        
        private DumpType pACField;
        
        private DumpType tOCField;
        
        private DumpType leadInCdTextField;
        
        private BorderType[] leadInField;
        
        private BorderType[] leadOutField;
        
        private SecuritySectorsType[] xboxSecuritySectorsField;
        
        private PS3EncryptionType pS3EncryptionField;
        
        private TrackType[] trackField;
        
        private DumpHardwareType[] dumpHardwareArrayField;
        
        /// <remarks/>
        public ImageType Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public SequenceType Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public LayersType Layers {
            get {
                return this.layersField;
            }
            set {
                this.layersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Checksum", IsNullable=false)]
        public ChecksumType[] Checksums {
            get {
                return this.checksumsField;
            }
            set {
                this.checksumsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RingCode")]
        public LayeredTextType[] RingCode {
            get {
                return this.ringCodeField;
            }
            set {
                this.ringCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MasteringSID")]
        public LayeredTextType[] MasteringSID {
            get {
                return this.masteringSIDField;
            }
            set {
                this.masteringSIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Toolstamp")]
        public LayeredTextType[] Toolstamp {
            get {
                return this.toolstampField;
            }
            set {
                this.toolstampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MouldSID")]
        public LayeredTextType[] MouldSID {
            get {
                return this.mouldSIDField;
            }
            set {
                this.mouldSIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MouldText")]
        public LayeredTextType[] MouldText {
            get {
                return this.mouldTextField;
            }
            set {
                this.mouldTextField = value;
            }
        }
        
        /// <remarks/>
        public string DiscType {
            get {
                return this.discTypeField;
            }
            set {
                this.discTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DiscSubType {
            get {
                return this.discSubTypeField;
            }
            set {
                this.discSubTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Offset {
            get {
                return this.offsetField;
            }
            set {
                this.offsetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OffsetSpecified {
            get {
                return this.offsetFieldSpecified;
            }
            set {
                this.offsetFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Tracks")]
        public int[] Tracks {
            get {
                return this.tracksField;
            }
            set {
                this.tracksField = value;
            }
        }
        
        /// <remarks/>
        public int Sessions {
            get {
                return this.sessionsField;
            }
            set {
                this.sessionsField = value;
            }
        }
        
        /// <remarks/>
        public string CopyProtection {
            get {
                return this.copyProtectionField;
            }
            set {
                this.copyProtectionField = value;
            }
        }
        
        /// <remarks/>
        public DimensionsType Dimensions {
            get {
                return this.dimensionsField;
            }
            set {
                this.dimensionsField = value;
            }
        }
        
        /// <remarks/>
        public CaseType Case {
            get {
                return this.caseField;
            }
            set {
                this.caseField = value;
            }
        }
        
        /// <remarks/>
        public ScansType Scans {
            get {
                return this.scansField;
            }
            set {
                this.scansField = value;
            }
        }
        
        /// <remarks/>
        public DumpType PFI {
            get {
                return this.pFIField;
            }
            set {
                this.pFIField = value;
            }
        }
        
        /// <remarks/>
        public DumpType DMI {
            get {
                return this.dMIField;
            }
            set {
                this.dMIField = value;
            }
        }
        
        /// <remarks/>
        public DumpType CMI {
            get {
                return this.cMIField;
            }
            set {
                this.cMIField = value;
            }
        }
        
        /// <remarks/>
        public DumpType BCA {
            get {
                return this.bCAField;
            }
            set {
                this.bCAField = value;
            }
        }
        
        /// <remarks/>
        public DumpType ATIP {
            get {
                return this.aTIPField;
            }
            set {
                this.aTIPField = value;
            }
        }
        
        /// <remarks/>
        public DumpType ADIP {
            get {
                return this.aDIPField;
            }
            set {
                this.aDIPField = value;
            }
        }
        
        /// <remarks/>
        public DumpType PMA {
            get {
                return this.pMAField;
            }
            set {
                this.pMAField = value;
            }
        }
        
        /// <remarks/>
        public DumpType DDS {
            get {
                return this.dDSField;
            }
            set {
                this.dDSField = value;
            }
        }
        
        /// <remarks/>
        public DumpType SAI {
            get {
                return this.sAIField;
            }
            set {
                this.sAIField = value;
            }
        }
        
        /// <remarks/>
        public DumpType LastRMD {
            get {
                return this.lastRMDField;
            }
            set {
                this.lastRMDField = value;
            }
        }
        
        /// <remarks/>
        public DumpType PRI {
            get {
                return this.pRIField;
            }
            set {
                this.pRIField = value;
            }
        }
        
        /// <remarks/>
        public DumpType MediaID {
            get {
                return this.mediaIDField;
            }
            set {
                this.mediaIDField = value;
            }
        }
        
        /// <remarks/>
        public DumpType PFIR {
            get {
                return this.pFIRField;
            }
            set {
                this.pFIRField = value;
            }
        }
        
        /// <remarks/>
        public DumpType DCB {
            get {
                return this.dCBField;
            }
            set {
                this.dCBField = value;
            }
        }
        
        /// <remarks/>
        public DumpType DI {
            get {
                return this.diField;
            }
            set {
                this.diField = value;
            }
        }
        
        /// <remarks/>
        public DumpType PAC {
            get {
                return this.pACField;
            }
            set {
                this.pACField = value;
            }
        }
        
        /// <remarks/>
        public DumpType TOC {
            get {
                return this.tOCField;
            }
            set {
                this.tOCField = value;
            }
        }
        
        /// <remarks/>
        public DumpType LeadInCdText {
            get {
                return this.leadInCdTextField;
            }
            set {
                this.leadInCdTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LeadIn")]
        public BorderType[] LeadIn {
            get {
                return this.leadInField;
            }
            set {
                this.leadInField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LeadOut")]
        public BorderType[] LeadOut {
            get {
                return this.leadOutField;
            }
            set {
                this.leadOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("SecuritySectors", IsNullable=false)]
        public SecuritySectorsType[] XboxSecuritySectors {
            get {
                return this.xboxSecuritySectorsField;
            }
            set {
                this.xboxSecuritySectorsField = value;
            }
        }
        
        /// <remarks/>
        public PS3EncryptionType PS3Encryption {
            get {
                return this.pS3EncryptionField;
            }
            set {
                this.pS3EncryptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Track")]
        public TrackType[] Track {
            get {
                return this.trackField;
            }
            set {
                this.trackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("DumpHardware", IsNullable=false)]
        public DumpHardwareType[] DumpHardwareArray {
            get {
                return this.dumpHardwareArrayField;
            }
            set {
                this.dumpHardwareArrayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserManualType {
        
        private LanguagesTypeLanguage[] languageField;
        
        private int pagesField;
        
        private string pageSizeField;
        
        private ScanType scanField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Language", IsNullable=false)]
        public LanguagesTypeLanguage[] Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public int Pages {
            get {
                return this.pagesField;
            }
            set {
                this.pagesField = value;
            }
        }
        
        /// <remarks/>
        public string PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public ScanType Scan {
            get {
                return this.scanField;
            }
            set {
                this.scanField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequiredOperatingSystemType {
        
        private string nameField;
        
        private string[] versionField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Version")]
        public string[] Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookType {
        
        private BarcodeType[] barcodesField;
        
        private CoverType coverField;
        
        private string nameField;
        
        private string editorialField;
        
        private string authorField;
        
        private System.DateTime publicationDateField;
        
        private bool publicationDateFieldSpecified;
        
        private LanguagesTypeLanguage[] languageField;
        
        private int pagesField;
        
        private bool pagesFieldSpecified;
        
        private string pageSizeField;
        
        private ScanType scanField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Barcode", IsNullable=false)]
        public BarcodeType[] Barcodes {
            get {
                return this.barcodesField;
            }
            set {
                this.barcodesField = value;
            }
        }
        
        /// <remarks/>
        public CoverType Cover {
            get {
                return this.coverField;
            }
            set {
                this.coverField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Editorial {
            get {
                return this.editorialField;
            }
            set {
                this.editorialField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime PublicationDate {
            get {
                return this.publicationDateField;
            }
            set {
                this.publicationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PublicationDateSpecified {
            get {
                return this.publicationDateFieldSpecified;
            }
            set {
                this.publicationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Language", IsNullable=false)]
        public LanguagesTypeLanguage[] Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public int Pages {
            get {
                return this.pagesField;
            }
            set {
                this.pagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PagesSpecified {
            get {
                return this.pagesFieldSpecified;
            }
            set {
                this.pagesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public ScanType Scan {
            get {
                return this.scanField;
            }
            set {
                this.scanField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CoverType {
        
        private FileType fileField;
        
        private ChecksumType[] checksumsField;
        
        private byte[] thumbnailField;
        
        /// <remarks/>
        public FileType File {
            get {
                return this.fileField;
            }
            set {
                this.fileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Checksum", IsNullable=false)]
        public ChecksumType[] Checksums {
            get {
                return this.checksumsField;
            }
            set {
                this.checksumsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Thumbnail {
            get {
                return this.thumbnailField;
            }
            set {
                this.thumbnailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MagazineType {
        
        private BarcodeType[] barcodesField;
        
        private CoverType coverField;
        
        private string nameField;
        
        private string editorialField;
        
        private System.DateTime publicationDateField;
        
        private bool publicationDateFieldSpecified;
        
        private int numberField;
        
        private bool numberFieldSpecified;
        
        private LanguagesTypeLanguage[] languageField;
        
        private int pagesField;
        
        private bool pagesFieldSpecified;
        
        private string pageSizeField;
        
        private ScanType scanField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Barcode", IsNullable=false)]
        public BarcodeType[] Barcodes {
            get {
                return this.barcodesField;
            }
            set {
                this.barcodesField = value;
            }
        }
        
        /// <remarks/>
        public CoverType Cover {
            get {
                return this.coverField;
            }
            set {
                this.coverField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Editorial {
            get {
                return this.editorialField;
            }
            set {
                this.editorialField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime PublicationDate {
            get {
                return this.publicationDateField;
            }
            set {
                this.publicationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PublicationDateSpecified {
            get {
                return this.publicationDateFieldSpecified;
            }
            set {
                this.publicationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberSpecified {
            get {
                return this.numberFieldSpecified;
            }
            set {
                this.numberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Language", IsNullable=false)]
        public LanguagesTypeLanguage[] Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public int Pages {
            get {
                return this.pagesField;
            }
            set {
                this.pagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PagesSpecified {
            get {
                return this.pagesFieldSpecified;
            }
            set {
                this.pagesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public ScanType Scan {
            get {
                return this.scanField;
            }
            set {
                this.scanField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "0.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum ArchitecturesTypeArchitecture {
        
        /// <remarks/>
        i86,
        
        /// <remarks/>
        ia32,
        
        /// <remarks/>
        ia64,
        
        /// <remarks/>
        amd64,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4004")]
        Item4004,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4040")]
        Item4040,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8080")]
        Item8080,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8008")]
        Item8008,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8085")]
        Item8085,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("8051")]
        Item8051,
        
        /// <remarks/>
        i860,
        
        /// <remarks/>
        i960,
        
        /// <remarks/>
        apx432,
        
        /// <remarks/>
        m68k,
        
        /// <remarks/>
        ppc,
        
        /// <remarks/>
        ppc64,
        
        /// <remarks/>
        x32,
        
        /// <remarks/>
        sparc,
        
        /// <remarks/>
        sparc64,
        
        /// <remarks/>
        arm,
        
        /// <remarks/>
        aarch64,
        
        /// <remarks/>
        avr,
        
        /// <remarks/>
        pic,
        
        /// <remarks/>
        msp430,
        
        /// <remarks/>
        z80,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("65816")]
        Item65816,
        
        /// <remarks/>
        sh,
        
        /// <remarks/>
        sh1,
        
        /// <remarks/>
        sh2,
        
        /// <remarks/>
        sh3,
        
        /// <remarks/>
        sh5,
        
        /// <remarks/>
        sh4,
        
        /// <remarks/>
        m6800,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("6502")]
        Item6502,
        
        /// <remarks/>
        axp,
        
        /// <remarks/>
        parisc,
        
        /// <remarks/>
        mips32,
        
        /// <remarks/>
        mips64,
        
        /// <remarks/>
        s360,
        
        /// <remarks/>
        s370,
        
        /// <remarks/>
        esa390,
        
        /// <remarks/>
        zarch,
        
        /// <remarks/>
        pdp11,
        
        /// <remarks/>
        vax,
        
        /// <remarks/>
        power,
    }
}
